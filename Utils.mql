Import "shanhai.lua"
Import "zm.luae"
zm.Init



Dim apikey = "LGZTmkf9AwP78E01jiYpmDyM", seckey="WGOi6d3tQvtB2B95XZCe2zeEnL5E1rtO"



/**
	方法名：百度AI识别文字 
	返回值：识别结果（json类型，含位置信息）
*/
Function 百度AI识别文字标准版()
	Dim ret,t()
	Dim args = {"apikey":apikey, "seckey":seckey, "posturl":"https://aip.baidubce.com/rest/2.0/ocr/v1/general", "recognize_granularity":"small"}
	zm.OcrBaiDuInit args
	SnapShot "/临时/1.png", 0,0,0,0
	ret = zm.OcrBaiDu("/临时/1.png", t)
	百度AI识别文字标准版=t
End Function



/**
	方法名：百度AI识别文字 
	返回值：识别结果（json类型，含位置信息）
*/
Function 百度AI识别文字()
	Dim api,secret,post_url,paramers,data,token,post_paramers,post_content,phoBase64,phoUrl,post_url2
	api="LGZTmkf9AwP78E01jiYpmDyM"		// 百度云识别平台应用API Key
	secret="WGOi6d3tQvtB2B95XZCe2zeEnL5E1rtO"		// 百度云识别平台应用Secret Key
	paramers = "grant_type=client_credentials&client_id=" & api & "&client_secret=" & secret
	post_url="https://aip.baidubce.com/oauth/2.0/token"		// 授权服务地址
	data = URL.Post(post_url, paramers)
	token = Encode.JsonToTable(data)	// token

	SnapShot "/sdcard/Pictures/临时/最新.png", 0, 0, 0, 0
	// base64编码，再转url编码
	phoBase64 = ShanHai.ReadFileBase("/sdcard/Pictures/临时/最新.png")	// base64编码：ShanHai.ReadFileBase(路径)
	phoUrl = ShanHai.CharToUrl(phoBase64)	// url编码：shanhai.CharToUrl(base64)

	post_paramers = "access_token=" & token["access_token"] & "&Content-Type=application/x-www-form-urlencoded&image=" & phoUrl & "&recognize_granularity=small"
	post_url2 = "https://aip.baidubce.com/rest/2.0/ocr/v1/accurate"
	post_content = URL.Post(post_url2, post_paramers)
	TracePrint post_content
	百度AI识别文字 = Encode.JsonToTable(post_content)
End Function



/**
	方法名：获取文本坐标 （返回第一个匹配的坐标）
	参数：json---百度AI识别文字后的words_result
		  words---目标字所在的词句（尽量唯一、少字）
		  word---目标字
	返回值：坐标或提示信息（字符串类型）
*/
Function 获取文本坐标(json, words, word)
	For i = 0 To UBOUND(json)
		If UTF8.InStr(1, json[i+1]["words"], words) > 0 Then 
			Dim chars, x, y
			chars = json[i+1]["chars"]
			For j = 0 To UBOUND(chars)
				If chars[j + 1]["char"] = word Then 
					x = chars[j+1]["location"]["left"]
					y = chars[j+1]["location"]["top"]
					获取文本坐标={"x":x,"y":y}
					Exit Function
				End If
			Next
			Exit For
		End If
	Next
	TracePrint words & "：坐标查找-失败"
	EndScript
End Function



/**
	方法名：获取所有文本坐标 
	参数：json---百度AI识别文字后的words_result
		  words---目标字所在的词句（尽量唯一、少字）
		  word---目标字
	返回值：坐标或提示信息（字符串类型）
*/
Function 获取所有文本坐标(json, words, word)
	Dim h=0,arr()
	For i = 0 To UBOUND(json)
		If UTF8.InStr(1, json[i + 1]["words"], words) > 0 Then 
			Dim chars, x, y
			chars = json[i+1]["chars"]
			For j = 0 To UBOUND(chars)
				If chars[j + 1]["char"] = word Then 
					x = chars[j+1]["location"]["left"]
					y = chars[j + 1]["location"]["top"]
					arr(h) = {"x":x, "y":y}
					h = h + 1
				End If
			Next
		End If
	Next
	获取所有文本坐标 = arr
End Function



/**
	方法名：创建文件夹 
	参数：path---要创建的文件夹路径
*/
Function 创建文件夹(path)
	Dim bool = Dir.Create(path)
	If bool Then 
		TracePrint path & "：创建成功"
	Else 
		TracePrint path & "：创建失败"
	End If
End Function



/**
	方法名： 删除文件夹
	参数：path---要删除的文件夹路径
*/
Function 删除文件夹(path)
	Dim bool = Dir.Delete(path)
	If bool Then 
		TracePrint path & "：删除成功"
	Else 
		TracePrint path & "：删除失败"
	End If
End Function



/**
	方法名：是否包含目标字 
	参数：word---目标字
*/
Function 是否包含目标字(word)
	Dim ret, t()
	If Not zm.OcrBaiDuInit(apikey, seckey) Then
    	TracePrint "初始化设置百度云识别失败"
    	EndScript
	End If
	ret = zm.OcrBaiDu(0, 0, 0, 0)
	If UTF8.InStr(1, ret, word) > 0 Then 
		是否包含目标字 = True
	Else 
		是否包含目标字 = False
	End If
End Function

